{"version":3,"sources":["index.js"],"names":["skins","emojisStr","document","querySelector","value","trim","split","length","config","size","elementSize","elementCount","lineCount","drawImage","indexArr","log","sum","i","v","entries","console","innerHTML","render","imageData","worker","Worker","postMessage","onmessage","e","data","toImageData","bitmap","imgWidth","imgHeight","width","c","createElement","resizedHeight","Math","round","height","ctx","getContext","getImageData","onSubmit","preventDefault","fileReader","target","elements","file","files","buffer","Response","arrayBuffer","type","name","endsWith","blob","Blob","imgUrl","URL","createObjectURL","img","Image","createImageBitmap","onload","src","error","addEventListener"],"mappings":";AAAA,IAAIA,EAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACvD,MAAMC,EAAYC,SAASC,cAAc,iBAAiBC,MACtDH,EAAUI,OAAOC,MAAM,OAAOC,SAChCP,EAAQC,EAAUI,OAAOC,MAAM,QAKjC,MAAME,EAAS,CACbC,KAAM,IACNC,YAAa,EACbC,aAAcX,EAAMO,OAAS,EAC7BK,UAAW,KAGb,SAASC,EAAUC,GACbC,IAAAA,EAAM,GACNC,EAAM,EACL,IAAA,MAAOC,EAAGC,KAAMJ,EAASK,UAC5BJ,GAAOf,EAAMkB,GAAK,GAAK,IAEX,MADZF,GAAO,KAELD,GAAO,KACPC,EAAM,GAGVI,QAAQL,IAAIA,GACZb,SAASC,cAAc,gBAAgBkB,UAAYN,EAGrD,SAASO,EAAOC,GACRC,MAAAA,EAAS,IAAIC,OAAO,wCAC1BD,EAAOE,YAAY,CAACH,EAAWf,IAE/BgB,EAAOG,UAAY,SAAUC,GAC3Bf,EAAUe,EAAEC,OAIhB,SAASC,EAAYC,EAAQC,EAAUC,EAAWC,GAC1CC,MAAAA,EAAIjC,SAASkC,cAAc,UAC3BC,EAAgBC,KAAKC,MAAML,EAAQD,EAAYD,GACrDG,EAAED,MAAQA,EACVC,EAAEK,OAASH,EACLI,MAAAA,EAAMN,EAAEO,WAAW,MAYlBD,OAXPA,EAAI5B,UACFkB,EACA,EACA,EACAA,EAAOG,MACPH,EAAOS,OACP,EACA,EACAN,EACAG,GAEKI,EAAIE,aAAa,EAAG,EAAGT,EAAOG,GAGvC,eAAeO,EAAShB,GACtBA,EAAEiB,iBACE,IAEIC,MAAAA,EAAalB,EAAEmB,OAAOC,SAASC,KAAKC,MAAM,GAC1CC,QAAe,IAAIC,SAASN,GAAYO,cACxCC,EAAOR,EAAWS,KAAKC,SAAS,QAAU,MAAQ,OAClDC,EAAO,IAAIC,KAAK,CAACP,GAAS,CAAEG,KAAeA,SAAAA,OAAAA,KAC3CK,EAASC,IAAIC,gBAAgBJ,GAC7BK,EAAM,IAAIC,MACVhC,QAAeiC,kBAAkBP,GACvCK,EAAIG,OAAS,MAEX3C,EAAOQ,EAAYC,EAAQ+B,EAAI5B,MAAO4B,EAAItB,OAAQ,OAEpDsB,EAAII,IAAMP,EACV,MAAO/B,GACPR,QAAQ+C,MAAMvC,IAIlB1B,SAASC,cAAc,QAAQiE,iBAAiB,SAAUxB","file":"src.ced4a4df.js","sourceRoot":"../src","sourcesContent":["let skins = [\"🏴\", \"🏴\", \"🦓\", \"🗻\", \"🐩\", \"🏳\", \"💭\", \"💭\"];\nconst emojisStr = document.querySelector('.input_emojis').value\nif (emojisStr.trim().split(/\\s/g).length) {\n  skins = emojisStr.trim().split(/\\s/g)\n}\n\n\n\nconst config = {\n  size: 1000,\n  elementSize: 1,\n  elementCount: skins.length - 1,\n  lineCount: 1000\n};\n\nfunction drawImage(indexArr) {\n  let log = ''\n  let sum = 0\n  for (const [i, v] of indexArr.entries()) {\n    log += skins[v || 0] + ' '\n    sum += 1\n    if (sum === 42) {\n      log += '\\n'\n      sum = 0\n    }\n  }\n  console.log(log)\n  document.querySelector('.img_wrapper').innerHTML = log\n}\n\nfunction render(imageData) {\n  const worker = new Worker(\"worker.js\");\n  worker.postMessage([imageData, config]);\n  // calculate the emojis\n  worker.onmessage = function (e) {\n    drawImage(e.data);\n  };\n}\n\nfunction toImageData(bitmap, imgWidth, imgHeight, width) {\n  const c = document.createElement(\"canvas\");\n  const resizedHeight = Math.round(width * imgHeight / imgWidth)\n  c.width = width;\n  c.height = resizedHeight;\n  const ctx = c.getContext(\"2d\");\n  ctx.drawImage(\n    bitmap,\n    0,\n    0,\n    bitmap.width,\n    bitmap.height,\n    0,\n    0,\n    width,\n    resizedHeight\n  );\n  return ctx.getImageData(0, 0, width, resizedHeight);\n}\n\nasync function onSubmit(e) {\n  e.preventDefault();\n  try {\n    // Read File\n    const fileReader = e.target.elements.file.files[0];\n    const buffer = await new Response(fileReader).arrayBuffer();\n    const type = fileReader.name.endsWith(\".png\") ? \"png\" : \"jpeg\";\n    const blob = new Blob([buffer], { type: `image/${type}` });\n    const imgUrl = URL.createObjectURL(blob)\n    const img = new Image()\n    const bitmap = await createImageBitmap(blob);\n    img.onload = () => {\n      // Get selected emoji\n      render(toImageData(bitmap, img.width, img.height, 42));\n    }\n    img.src = imgUrl\n  } catch (e) {\n    console.error(e);\n  }\n}\n\ndocument.querySelector(\"form\").addEventListener(\"submit\", onSubmit);\n"]}