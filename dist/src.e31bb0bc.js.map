{"version":3,"sources":["index.js"],"names":["skins","emojisStr","document","querySelector","value","trim","split","length","config","size","elementSize","elementCount","lineCount","drawImage","indexArr","log","sum","i","v","entries","console","innerHTML","render","imageData","worker","Worker","postMessage","onmessage","e","data","toImageData","bitmap","imgWidth","imgHeight","width","c","createElement","resizedHeight","Math","round","height","ctx","getContext","getImageData","onSubmit","preventDefault","fileReader","target","elements","file","files","buffer","Response","arrayBuffer","type","name","endsWith","blob","Blob","imgUrl","URL","createObjectURL","img","Image","createImageBitmap","onload","src","error","addEventListener"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["let skins = [\"🏴\", \"🏴\", \"🦓\", \"🗻\", \"🐩\", \"🏳\", \"💭\", \"💭\"];\nconst emojisStr = document.querySelector('.input_emojis').value\nif (emojisStr.trim().split(/\\s/g).length) {\n  skins = emojisStr.trim().split(/\\s/g)\n}\n\n\n\nconst config = {\n  size: 1000,\n  elementSize: 1,\n  elementCount: skins.length - 1,\n  lineCount: 1000\n};\n\nfunction drawImage(indexArr) {\n  let log = ''\n  let sum = 0\n  for (const [i, v] of indexArr.entries()) {\n    log += skins[v || 0] + ' '\n    sum += 1\n    if (sum === 42) {\n      log += '\\n'\n      sum = 0\n    }\n  }\n  console.log(log)\n  document.querySelector('.img_wrapper').innerHTML = log\n}\n\nfunction render(imageData) {\n  const worker = new Worker(\"worker.js\");\n  worker.postMessage([imageData, config]);\n  // calculate the emojis\n  worker.onmessage = function (e) {\n    drawImage(e.data);\n  };\n}\n\nfunction toImageData(bitmap, imgWidth, imgHeight, width) {\n  const c = document.createElement(\"canvas\");\n  const resizedHeight = Math.round(width * imgHeight / imgWidth)\n  c.width = width;\n  c.height = resizedHeight;\n  const ctx = c.getContext(\"2d\");\n  ctx.drawImage(\n    bitmap,\n    0,\n    0,\n    bitmap.width,\n    bitmap.height,\n    0,\n    0,\n    width,\n    resizedHeight\n  );\n  return ctx.getImageData(0, 0, width, resizedHeight);\n}\n\nasync function onSubmit(e) {\n  e.preventDefault();\n  try {\n    // Read File\n    const fileReader = e.target.elements.file.files[0];\n    const buffer = await new Response(fileReader).arrayBuffer();\n    const type = fileReader.name.endsWith(\".png\") ? \"png\" : \"jpeg\";\n    const blob = new Blob([buffer], { type: `image/${type}` });\n    const imgUrl = URL.createObjectURL(blob)\n    const img = new Image()\n    const bitmap = await createImageBitmap(blob);\n    img.onload = () => {\n      // Get selected emoji\n      render(toImageData(bitmap, img.width, img.height, 42));\n    }\n    img.src = imgUrl\n  } catch (e) {\n    console.error(e);\n  }\n}\n\ndocument.querySelector(\"form\").addEventListener(\"submit\", onSubmit);\n"]}